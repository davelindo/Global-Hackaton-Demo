steps:
- name: 'gcr.io/cloud-builders/npm'
  args: ['install']
  dir: ./react-router/
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '--tag=gcr.io/$PROJECT_ID/react-router:$REVISION_ID', '.']
  dir: ./react-router/
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '--tag=gcr.io/$PROJECT_ID/react-router:latest', '.']
  dir: ./react-router/
- name: 'gcr.io/cloud-builders/kubectl'
  args:
  - 'apply'
  - '-f'
  - 'k8s/deployments.yaml'
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=us-central1-a'
  - 'CLOUDSDK_CONTAINER_CLUSTER=example'
  dir: ./react-router/
- name: 'gcr.io/cloud-builders/kubectl'
  args:
  - 'apply'
  - '-f'
  - 'k8s/services.yaml'
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=us-central1-a'
  - 'CLOUDSDK_CONTAINER_CLUSTER=example'
  dir: ./react-router/
- name: 'gcr.io/cloud-builders/kubectl'
  args:
  - 'apply'
  - '-f'
  - 'k8s/ingress.yaml'
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=us-central1-a'
  - 'CLOUDSDK_CONTAINER_CLUSTER=example'
  dir: ./react-router/
- name: 'gcr.io/cloud-builders/kubectl'
  args:
  - 'set'
  - 'image'
  - 'deployment.v1.apps/react-router'
  - 'react-router=react-router:$REVISION_ID'
  - '--record'
  - 'deployment.apps/react-router'
  - 'image'
  - 'updated'
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=us-central1-a'
  - 'CLOUDSDK_CONTAINER_CLUSTER=example'
images:
- 'gcr.io/$PROJECT_ID/react-router:$REVISION_ID'
- 'gcr.io/$PROJECT_ID/react-router:latest'
tags:
- "latest"
- "$REVISION_ID"
